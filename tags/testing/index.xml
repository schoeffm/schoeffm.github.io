<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Personal PasteBin</title>
    <link>https://schoeffm.github.io/tags/testing/</link>
    <description>Recent content in testing on Personal PasteBin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Aug 2019 10:41:28 +0200</lastBuildDate>
    
	<atom:link href="https://schoeffm.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using load-tests as quality gate in Jenkins pipelines</title>
      <link>https://schoeffm.github.io/posts/integration-of-loadtests-within-jenkins-pipelines/</link>
      <pubDate>Wed, 14 Aug 2019 10:41:28 +0200</pubDate>
      
      <guid>https://schoeffm.github.io/posts/integration-of-loadtests-within-jenkins-pipelines/</guid>
      <description>&lt;p&gt;Over years &lt;a href=&#34;https://jmeter.apache.org/&#34; target=&#34;_blank&#34;&gt;JMeter&lt;/a&gt; has always been a valuable tool in my box when dealing with performance testing. But when we&amp;rsquo;ve integrated those tests with our CI/CD-pipeline we always had hard times to control the pipeline outcome based on the performance results. &lt;br/&gt;
In other words, let the test results act as a quality gate for either promoting the build-artfiact along the pipeline or not.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Testing Web Components</title>
      <link>https://schoeffm.github.io/posts/testing-web-components/</link>
      <pubDate>Fri, 02 Aug 2019 08:14:21 +0200</pubDate>
      
      <guid>https://schoeffm.github.io/posts/testing-web-components/</guid>
      <description>&lt;p&gt;Testing web-components in isolation can be a challenging task. The (&lt;em&gt;current&lt;/em&gt;) usual suspects in this area still &lt;a href=&#34;https://github.com/jsdom/jsdom/issues/1030&#34; target=&#34;_blank&#34;&gt;lack support for the standard&lt;/a&gt; and thus cannot be used (at least at the time of this writing). Also, the web is swamped by posts about frameworks and thus finding good example projects or tutorials is also challenging.&lt;br/&gt;
Finally, we found, at least for our project, a good solution which does the job and whose setup I&amp;rsquo;d like to write down/preserve (find the &lt;a href=&#34;https://github.com/schoeffm/testing-web-components&#34; target=&#34;_blank&#34;&gt;corrsponding code in this repo&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>