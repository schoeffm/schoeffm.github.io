<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jq on Personal PasteBin</title>
    <link>https://schoeffm.github.io/tags/jq/</link>
    <description>Recent content in jq on Personal PasteBin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 May 2020 20:41:26 +0200</lastBuildDate>
    
	<atom:link href="https://schoeffm.github.io/tags/jq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JSON-Log Parsing With stern and jq</title>
      <link>https://schoeffm.github.io/posts/json-log-parsing-with-stern-and-jq/</link>
      <pubDate>Thu, 07 May 2020 20:41:26 +0200</pubDate>
      
      <guid>https://schoeffm.github.io/posts/json-log-parsing-with-stern-and-jq/</guid>
      <description>&lt;p&gt;In many projects we use JSON as log format since it inheritly bears structure and thus is easy to process by log-aggregators (i.e. &lt;a href=&#34;https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html&#34;&gt;AWS CloudWatch&lt;/a&gt; autom. discovers fields from json just like &lt;a href=&#34;https://www.fluentd.org/centralized_application_logging&#34;&gt;fluentd&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jq by example</title>
      <link>https://schoeffm.github.io/posts/jq-by-example/</link>
      <pubDate>Wed, 29 Jan 2020 15:07:59 +0100</pubDate>
      
      <guid>https://schoeffm.github.io/posts/jq-by-example/</guid>
      <description>&lt;p&gt;Inspired by a &lt;a href=&#34;https://www.baeldung.com/linux/jq-command-json&#34;&gt;nice tutorial on Baeldung&lt;/a&gt; I&amp;rsquo;ve decided to write done some usual suspects when working with &lt;a href=&#34;https://stedolan.github.io/jq/manual/&#34;&gt;jq&lt;/a&gt;. Hence, this is more like a cheatsheet than a regular post.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>